
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Fahim
 */
public class SearchOption extends javax.swing.JFrame {

    /**
     * Creates new form SearchOption
     */
    public SearchOption() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MovieGroup = new javax.swing.ButtonGroup();
        HallGroup = new javax.swing.ButtonGroup();
        StaffGroup = new javax.swing.ButtonGroup();
        selector = new javax.swing.JComboBox<>();
        txt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        MovieToHall = new javax.swing.JRadioButton();
        MovieToStaff = new javax.swing.JRadioButton();
        MovieToExStaff = new javax.swing.JRadioButton();
        MovieToTradings = new javax.swing.JRadioButton();
        MovieToNone = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        HallToMovies = new javax.swing.JRadioButton();
        HallToStaff = new javax.swing.JRadioButton();
        HallToTradings = new javax.swing.JRadioButton();
        HallToExStaff = new javax.swing.JRadioButton();
        StaffToMovies = new javax.swing.JRadioButton();
        StaffToNone = new javax.swing.JRadioButton();
        HallToNone = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        MovieToSeat = new javax.swing.JRadioButton();
        jButton13 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MovieName", "HallName", "StaffName" }));
        selector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorActionPerformed(evt);
            }
        });

        txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtActionPerformed(evt);
            }
        });

        jLabel1.setText("Under Movie Name");

        MovieGroup.add(MovieToHall);
        MovieToHall.setText("Hall");
        MovieToHall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovieToHallActionPerformed(evt);
            }
        });

        MovieGroup.add(MovieToStaff);
        MovieToStaff.setText("Staff");
        MovieToStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovieToStaffActionPerformed(evt);
            }
        });

        MovieGroup.add(MovieToExStaff);
        MovieToExStaff.setText("Ex-Staff");
        MovieToExStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovieToExStaffActionPerformed(evt);
            }
        });

        MovieGroup.add(MovieToTradings);
        MovieToTradings.setText("Tradings");

        MovieGroup.add(MovieToNone);
        MovieToNone.setText("None");

        jLabel2.setText("Under Staff");

        jLabel3.setText("Under Hall");

        HallGroup.add(HallToMovies);
        HallToMovies.setText("Movies");
        HallToMovies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HallToMoviesActionPerformed(evt);
            }
        });

        HallGroup.add(HallToStaff);
        HallToStaff.setText("Staff");
        HallToStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HallToStaffActionPerformed(evt);
            }
        });

        HallGroup.add(HallToTradings);
        HallToTradings.setText("Tradings");

        HallGroup.add(HallToExStaff);
        HallToExStaff.setText("Ex-Staff");
        HallToExStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HallToExStaffActionPerformed(evt);
            }
        });

        StaffGroup.add(StaffToMovies);
        StaffToMovies.setText("Movies");

        StaffGroup.add(StaffToNone);
        StaffToNone.setText("None");

        HallGroup.add(HallToNone);
        HallToNone.setText("None");

        jLabel4.setText("SEARCH");

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        MovieGroup.add(MovieToSeat);
        MovieToSeat.setText("Seat");

        jButton13.setText("Back");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MovieToTradings)
                            .addComponent(MovieToExStaff)
                            .addComponent(MovieToStaff)
                            .addComponent(MovieToHall)
                            .addComponent(MovieToSeat)
                            .addComponent(MovieToNone))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HallToExStaff)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(HallToMovies)
                                    .addComponent(HallToStaff)
                                    .addComponent(HallToTradings))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(StaffToMovies)
                                    .addComponent(StaffToNone)))
                            .addComponent(HallToNone)))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selector, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(selector, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StaffToMovies, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MovieToHall)
                        .addComponent(HallToMovies)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MovieToStaff)
                    .addComponent(HallToStaff)
                    .addComponent(StaffToNone))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MovieToExStaff)
                    .addComponent(HallToTradings))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MovieToTradings)
                    .addComponent(HallToExStaff))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HallToNone)
                    .addComponent(MovieToSeat))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(MovieToNone)
                        .addContainerGap(61, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtActionPerformed

    private void MovieToHallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MovieToHallActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MovieToHallActionPerformed

    private void MovieToStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MovieToStaffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MovieToStaffActionPerformed

    private void MovieToExStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MovieToExStaffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MovieToExStaffActionPerformed

    private void HallToStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HallToStaffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HallToStaffActionPerformed

    private void HallToExStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HallToExStaffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HallToExStaffActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Connection con;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");

            String selected = selector.getSelectedItem().toString();

            if (selected == "MovieName") {

                if (MovieToHall.isSelected() == true) {

                    MovieWithHall(con);
                } else if (MovieToStaff.isSelected() == true) {

                    MovieWithStaff(con);

                } else if (MovieToExStaff.isSelected() == true) {
                    MovieWithExStaff(con);
                } else if (MovieToTradings.isSelected() == true) {
                    MovieWithTradings(con);
                } else if (MovieToNone.isSelected() == true) {
                    MovieWithNone(con);
                } else if (MovieToSeat.isSelected() == true) {
                    MovieWithSeat(con);
                }

            } else if (selected == "HallName") {

                if (HallToMovies.isSelected() == true) {

                    HallWithMovies(con);
                } else if (HallToStaff.isSelected() == true) {

                    HallWithStaff(con);
                } else if (HallToNone.isSelected() == true) {

                    HallWithNone(con);
                }

            } else if (selected == "StaffName") {

                if (StaffToMovies.isSelected() == true) {

                    StaffWithMovie(con);
                }

            }

        } catch (Exception ex) {
            Logger.getLogger(SearchOption.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    void MovieWithHall(Connection con) throws SQLException {
        String query = "Select Hall.HallName,HallType,TotalSeat from Hall Inner join Showtime ON "
                + " Hall.HallName = Showtime.HallName where MovieName = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, txt.getText());

        ResultSet rs = ps.executeQuery();
        String[][] data = new String[20][3];
        int itr = 0;

        while (rs.next()) {

            data[itr][0] = rs.getString("HallName");
            data[itr][1] = rs.getString("HallType");
            data[itr][2] = rs.getString("TotalSeat");
            itr++;
        }
        System.out.println(itr);

        new MovieToHall(data, itr).setVisible(true);
        setVisible(false);

    }

    void MovieWithStaff(Connection con) throws SQLException {
        String query = "select StaffID,FirstName,LastName,Staff.StartingTime,Staff.EndingTime,Salary"
                + " from Staff inner join Showtime On  staff.hallname = Showtime.HallName where MovieName = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, txt.getText());

        ResultSet rs = ps.executeQuery();
        String[][] data = new String[20][6];
        int itr = 0;

        while (rs.next()) {

            data[itr][0] = rs.getString("StaffID");
            data[itr][1] = rs.getString("FirstName");
            data[itr][2] = rs.getString("LastName");
            data[itr][3] = rs.getString("StartingTime");
            data[itr][4] = rs.getString("EndingTime");
            data[itr][5] = rs.getString("Salary");
            itr++;
        }
        System.out.println(itr);

        new MovieToStaff(data, itr).setVisible(true);
        setVisible(false);

    }

    void MovieWithExStaff(Connection con) throws SQLException {
        String query = "select StaffID,FirstName,LastName,ExStaff.StatingTime,ExStaff.EndingTime,Salary"
                + " from ExStaff inner join Showtime On  Exstaff.hallname = Showtime.HallName where MovieName = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, txt.getText());

        ResultSet rs = ps.executeQuery();
        String[][] data = new String[20][6];
        int itr = 0;

        while (rs.next()) {

            data[itr][0] = rs.getString("StaffID");
            data[itr][1] = rs.getString("FirstName");
            data[itr][2] = rs.getString("LastName");
            data[itr][3] = rs.getString("StatingTime");
            data[itr][4] = rs.getString("EndingTime");
            data[itr][5] = rs.getString("Salary");
            itr++;
        }
        System.out.println(itr);

        new MovieToExStaff(data, itr).setVisible(true);
        setVisible(false);

    }

    void MovieWithTradings(Connection con) throws SQLException {
        String query = "select ID,Cost,CustomerName,Phone,Tradings.Code,Date"
                + " from Tradings inner join Showtime On  Tradings.Code = Showtime.code where MovieName = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, txt.getText());

        ResultSet rs = ps.executeQuery();
        String[][] data = new String[20][6];
        int itr = 0;

        while (rs.next()) {

            data[itr][0] = rs.getString("ID");
            data[itr][1] = rs.getString("Cost");
            data[itr][2] = rs.getString("CustomerName");
            data[itr][3] = rs.getString("Phone");
            data[itr][4] = rs.getString("Code");
            data[itr][5] = rs.getString("Date");
            itr++;
        }
        System.out.println(itr);

        new MovieToTradings(data, itr).setVisible(true);
        setVisible(false);

    }

    void MovieWithNone(Connection con) throws SQLException {
        String query = "select Code,MovieName,HallName,StartingTime,EndingTime,TicketPrice"
                + " from Showtime where MovieName = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, txt.getText());

        ResultSet rs = ps.executeQuery();
        String[][] data = new String[20][6];
        int itr = 0;

        while (rs.next()) {

            data[itr][0] = rs.getString("Code");
            data[itr][1] = rs.getString("HallName");
            data[itr][2] = rs.getString("StartingTime");
            data[itr][3] = rs.getString("EndingTime");
            data[itr][4] = rs.getString("TicketPrice");
            itr++;
        }
        System.out.println(itr);

        new MovieToNone(data, itr).setVisible(true);
        setVisible(false);

    }

    void MovieWithSeat(Connection con) throws SQLException {
        String query = "select Seat.Code,Vacant,Booked,R11,R12,R13,R21,R22,R23,R31,R32,R33,R41,R42,R43"
                + " from Seat inner join showtime on Seat.Code = Showtime.code where MovieName = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, txt.getText());

        ResultSet rs = ps.executeQuery();
        String[][] data = new String[20][6];
        int itr = 0;

        while (rs.next()) {

            data[itr][0] = rs.getString("Code");
            data[itr][1] = rs.getString("Vacant");
            data[itr][2] = rs.getString("Booked");
            data[itr][3] = rs.getString("R11");
            data[itr][4] = rs.getString("R12");
            data[itr][4] = rs.getString("R13");
            data[itr][4] = rs.getString("R21");
            data[itr][4] = rs.getString("R22");
            data[itr][4] = rs.getString("R23");
            data[itr][4] = rs.getString("R31");
            data[itr][4] = rs.getString("R32");
            data[itr][4] = rs.getString("R33");
            data[itr][4] = rs.getString("R41");
            data[itr][4] = rs.getString("R42");
            data[itr][4] = rs.getString("R43");
            itr++;
        }
        System.out.println(itr);

        new MovieToSeat(data, itr).setVisible(true);
        setVisible(false);

    }

    void HallWithMovies(Connection con) throws SQLException {
        String query = "select Code,MovieName,StartingTime,EndingTime,TicketPrice"
                + " from Showtime where HallName = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, txt.getText());

        ResultSet rs = ps.executeQuery();
        String[][] data = new String[20][5];
        int itr = 0;

        while (rs.next()) {

            data[itr][0] = rs.getString("Code");
            data[itr][1] = rs.getString("MovieName");
            data[itr][2] = rs.getString("StartingTime");
            data[itr][3] = rs.getString("EndingTime");
            data[itr][4] = rs.getString("TicketPrice");
            itr++;
        }
        System.out.println(itr);

        new HallToMovies(data, itr).setVisible(true);
        setVisible(false);

    }

    void HallWithStaff(Connection con) throws SQLException {
        String query = "select StaffID,FirstName,LastName,StartingTime,EndingTime,Salary"
                + " from Staff where HallName = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, txt.getText());

        ResultSet rs = ps.executeQuery();
        String[][] data = new String[20][6];
        int itr = 0;

        while (rs.next()) {

            data[itr][0] = rs.getString("StaffID");
            data[itr][1] = rs.getString("FirstName");
            data[itr][2] = rs.getString("LastName");
            data[itr][3] = rs.getString("StartingTime");
            data[itr][4] = rs.getString("EndingTime");
            data[itr][5] = rs.getString("Salary");

            itr++;
        }
        System.out.println(itr);

        new HallToStaff(data, itr).setVisible(true);
        setVisible(false);

    }

    void HallWithNone(Connection con) throws SQLException {

        String query = "select HallType,TotalSeat "
                + " from Hall where HallName = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, txt.getText());

        ResultSet rs = ps.executeQuery();
        String[][] data = new String[20][2];
        int itr = 0;

        while (rs.next()) {

            data[itr][0] = rs.getString("HallType");
            data[itr][1] = rs.getString("TotalSeat");
            itr++;
        }
        System.out.println(itr);

        new HallToNone(data, itr).setVisible(true);
        setVisible(false);

    }

    void StaffWithMovie(Connection con) throws SQLException {
        String query = "select Code,MovieName,Showtime.StartingTime,Showtime.EndingTime,TicketPrice"
                + " from Staff inner join Showtime On Staff.HallName = Showtime.HallName where FirstName = ? or LastName = ?";
        PreparedStatement ps = con.prepareStatement(query);
        ps.setString(1, txt.getText());
        ps.setString(2, txt.getText());

        ResultSet rs = ps.executeQuery();
        String[][] data = new String[20][5];
        int itr = 0;

        while (rs.next()) {

            data[itr][0] = rs.getString("Code");
            data[itr][1] = rs.getString("MovieName");
            data[itr][2] = rs.getString("StartingTime");
            data[itr][3] = rs.getString("EndingTime");
            data[itr][4] = rs.getString("TicketPrice");
            itr++;
        }
        System.out.println(itr);

        new StaffToMovie(data, itr).setVisible(true);
        setVisible(false);

    }


    private void selectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:

        new AdvancedAdminPanel().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void HallToMoviesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HallToMoviesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HallToMoviesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchOption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchOption().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup HallGroup;
    private javax.swing.JRadioButton HallToExStaff;
    private javax.swing.JRadioButton HallToMovies;
    private javax.swing.JRadioButton HallToNone;
    private javax.swing.JRadioButton HallToStaff;
    private javax.swing.JRadioButton HallToTradings;
    private javax.swing.ButtonGroup MovieGroup;
    private javax.swing.JRadioButton MovieToExStaff;
    private javax.swing.JRadioButton MovieToHall;
    private javax.swing.JRadioButton MovieToNone;
    private javax.swing.JRadioButton MovieToSeat;
    private javax.swing.JRadioButton MovieToStaff;
    private javax.swing.JRadioButton MovieToTradings;
    private javax.swing.ButtonGroup StaffGroup;
    private javax.swing.JRadioButton StaffToMovies;
    private javax.swing.JRadioButton StaffToNone;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox<String> selector;
    private javax.swing.JTextField txt;
    // End of variables declaration//GEN-END:variables
}
