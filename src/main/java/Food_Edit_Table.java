/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.table.DefaultTableModel;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Fahim
 */
public class Food_Edit_Table extends javax.swing.JFrame {

    /**
     * Creates new form Food_Edit_Table
     */
    public Food_Edit_Table() {
        initComponents();
    }
     public Food_Edit_Table(String info[][],int itr) {
        initComponents();
   
  DefaultTableModel model = (DefaultTableModel)Food_Table_Display.getModel();
            String data[] = new String[3];

            for (int i = 0; i < itr; i++) {

                for (int j = 0; j < 3; j++) {
                    data[j] = info[i][j];
                }

                model.addRow(data);
            }
  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Food_Table_Display = new javax.swing.JTable();
        MealPrice_Add_txt = new javax.swing.JTextField();
        MealName_Add_txt = new javax.swing.JTextField();
        MealName_Update_1 = new javax.swing.JTextField();
        MealPrice_Update_txt = new javax.swing.JTextField();
        MealName_Update_txt = new javax.swing.JTextField();
        MealPrice_Update_1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Add_Row_Btn = new javax.swing.JButton();
        Remove_Row_Btn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Hall_Update_Btn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Food_Table_Display.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hall Name", "Hall Type", "Total Seat"
            }
        ));
        jScrollPane1.setViewportView(Food_Table_Display);

        jLabel7.setText("Condition :");

        jLabel8.setText("Update Value :");

        jLabel1.setText("Meal Price");

        jLabel2.setText("Meal Name");

        Add_Row_Btn.setText("Add");
        Add_Row_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Row_BtnActionPerformed(evt);
            }
        });

        Remove_Row_Btn.setText("Remove");
        Remove_Row_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Remove_Row_BtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Meal Name");

        jLabel4.setText("Meal Price");

        Hall_Update_Btn.setText("Update");
        Hall_Update_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hall_Update_BtnActionPerformed(evt);
            }
        });

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(780, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(270, 270, 270)
                            .addComponent(jLabel3)
                            .addGap(138, 138, 138)
                            .addComponent(jLabel4))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(230, 230, 230)
                            .addComponent(MealName_Add_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(39, 39, 39)
                            .addComponent(MealPrice_Add_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(280, 280, 280)
                            .addComponent(Add_Row_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(108, 108, 108)
                            .addComponent(Remove_Row_Btn))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(280, 280, 280)
                            .addComponent(jLabel2)
                            .addGap(148, 148, 148)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(120, 120, 120)
                            .addComponent(jLabel7)
                            .addGap(58, 58, 58)
                            .addComponent(MealName_Update_1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(MealPrice_Update_1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(120, 120, 120)
                            .addComponent(jLabel8)
                            .addGap(39, 39, 39)
                            .addComponent(MealName_Update_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(59, 59, 59)
                            .addComponent(MealPrice_Update_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(380, 380, 380)
                            .addComponent(Hall_Update_Btn)))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(530, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(37, 37, 37)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4))
                    .addGap(16, 16, 16)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(MealName_Add_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MealPrice_Add_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(30, 30, 30)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Add_Row_Btn)
                        .addComponent(Remove_Row_Btn))
                    .addGap(47, 47, 47)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1))
                    .addGap(6, 6, 6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7)
                        .addComponent(MealName_Update_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MealPrice_Update_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(40, 40, 40)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel8)
                        .addComponent(MealName_Update_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(MealPrice_Update_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(60, 60, 60)
                    .addComponent(Hall_Update_Btn)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Add_Row_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Row_BtnActionPerformed
        // TODO add your handling code here:

        String Meal_Name = MealName_Add_txt.getText();
        String Meal_Price = MealPrice_Add_txt.getText();

        if(Meal_Name.equals(""))

        JOptionPane.showMessageDialog(null,"Enter a Meal Name");

        else if(Meal_Price.equals(""))

        JOptionPane.showMessageDialog(null,"Enter Meal Price");

        else {         try {
            Connection connection;
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            connection = DriverManager.getConnection(
                "jdbc:sqlserver://localhost:1433;databaseName=Register_Login;selectMethod=cursor", "root", "root");

            String command = "insert into Food (MealName,MealPrice) values (?,?)";
            PreparedStatement ps = connection.prepareStatement(command);
            ps.setString(1,Meal_Name);
            ps.setString(2,Meal_Price);

            ps.executeUpdate();

        }
        catch (Exception e) {
            e.printStackTrace();
        }
        }

        String query = "SELECT * from Food ";

        int itr = 0;

        String [][]info = new String [1000][10];

        try {
            Connection con;
            PreparedStatement ps;
            ResultSet rs;
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
            ps = con.prepareStatement(query);

            rs = ps.executeQuery();

            while(rs.next()){

                String []data = new String [3];

                info[itr][0]= rs.getString("Code");
                info[itr][1]= rs.getString("MealName");
                info[itr][2]= rs.getString("MealPrice");

                itr++;
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(itr);

        setVisible(false);
        new Food_Edit_Table(info,itr).setVisible(true);
    }//GEN-LAST:event_Add_Row_BtnActionPerformed

    private void Remove_Row_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Remove_Row_BtnActionPerformed
        // TODO add your handling code here:

        int itr = 0;

        String [][]info = new String [1000][10];
        String Meal_Name = MealName_Add_txt.getText();
        String Meal_Price = MealPrice_Add_txt.getText();

        if(Meal_Name.equals("")){

            String query=   "DELETE FROM HAll WHERE HallName=?";

            try {
                Connection con;
                PreparedStatement ps;
                ResultSet rs;
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

                con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
                ps = con.prepareStatement(query);

                ps.setString(1,Meal_Name);

                rs = ps.executeQuery();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            }

            query = "SELECT * from Food ";

            try {
                Connection con;
                PreparedStatement ps;
                ResultSet rs;
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

                con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
                ps = con.prepareStatement(query);

                rs = ps.executeQuery();

                while(rs.next()){

                    String []data = new String [3];

                    info[itr][0]= rs.getString("Code");
                    info[itr][1]= rs.getString("MealName");
                    info[itr][2]= rs.getString("MealPrice");

                    itr++;
                }

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println(itr);

            setVisible(false);
            new Food_Edit_Table(info,itr).setVisible(true);

        }
    }//GEN-LAST:event_Remove_Row_BtnActionPerformed

    private void Hall_Update_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hall_Update_BtnActionPerformed
        // TODO add your handling code here:

        boolean flag = false;

        String query = "Update Hall Set ";

        if(!MealName_Update_txt.getText().isEmpty()){

            String qq= "'"+MealName_Update_txt.getText().toString()+"'";

            query = query + "MealName = "+qq;

            flag = true;

        }

        if(!MealPrice_Update_txt.getText().isEmpty()){

            String qq="'"+ MealPrice_Update_txt.getText().toString()+"'";

            if (flag==true){
                query= query+",";

            }
            query = query + "MealPrice = "+qq;

            flag = true;

        }

        query=query+" where ";
        flag= false;

        if(!MealName_Update_1.getText().isEmpty()){

            String qq="'"+ MealName_Update_1.getText().toString()+"'";

            if (flag==true){
                query= query+",";

            }
            query = query + "HallName = "+qq;

            flag = true;

        }

        if(!MealPrice_Update_1.getText().isEmpty()){

            String qq= MealPrice_Update_1.getText().toString();

            if (flag==true){
                query= query+",";

            }
            query = query + "MealPrice = "+qq;

            flag = true;

        }

        try {
            Connection con;
            PreparedStatement ps;
            ResultSet rs;
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
            ps = con.prepareStatement(query);

            System.out.println(query);
            rs = ps.executeQuery();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }

        query = "SELECT * from Hall ";

        int itr = 0;

        String [][]info = new String [1000][10];

        try {
            Connection con;
            PreparedStatement ps;
            ResultSet rs;
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
            ps = con.prepareStatement(query);

            rs = ps.executeQuery();

            while(rs.next()){

                String []data = new String [3];

                info[itr][0]= rs.getString("Code");
                info[itr][1]= rs.getString("MealName");
                info[itr][2]= rs.getString("MealPrice");

                itr++;
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(itr);

        setVisible(false);
        new Food_Edit_Table(info,itr).setVisible(true);
    }//GEN-LAST:event_Hall_Update_BtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        new Edit_Tables().setVisible(true);
        setVisible(false);

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Food_Edit_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Food_Edit_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Food_Edit_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Food_Edit_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Food_Edit_Table().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_Row_Btn;
    private javax.swing.JTable Food_Table_Display;
    private javax.swing.JButton Hall_Update_Btn;
    private javax.swing.JTextField MealName_Add_txt;
    private javax.swing.JTextField MealName_Update_1;
    private javax.swing.JTextField MealName_Update_txt;
    private javax.swing.JTextField MealPrice_Add_txt;
    private javax.swing.JTextField MealPrice_Update_1;
    private javax.swing.JTextField MealPrice_Update_txt;
    private javax.swing.JButton Remove_Row_Btn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
