/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Fahim
 */

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class Hall_Edit_Table extends javax.swing.JFrame {

    /**
     * Creates new form Hall_Edit_Table
     */
    public Hall_Edit_Table() {
        initComponents();
    }
       public Hall_Edit_Table(String info[][], int itr) {
        initComponents();

        DefaultTableModel model = (DefaultTableModel) Hall_Table_Display.getModel();
        String data[] = new String[3];

        for (int i = 0; i < itr; i++) {

            for (int j = 0; j < 3; j++) {
                data[j] = info[i][j];
            }

            model.addRow(data);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Hall_Table_Display = new javax.swing.JTable();
        HallName_Add_txt = new javax.swing.JTextField();
        HallType_Add_txt = new javax.swing.JTextField();
        TotalSeat_Add_txt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Add_Row_Btn = new javax.swing.JButton();
        Remove_Row_Btn = new javax.swing.JButton();
        TotalSeat_Update_txt = new javax.swing.JTextField();
        HallName_Update_txt = new javax.swing.JTextField();
        HallType_Update_txt = new javax.swing.JTextField();
        Hall_Update_Btn = new javax.swing.JButton();
        HallName_Update_1 = new javax.swing.JTextField();
        HallType_Update_1 = new javax.swing.JTextField();
        TotalSeat_Update_1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Hall_Table_Display.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hall Name", "Hall Type", "Total Seat"
            }
        ));
        jScrollPane1.setViewportView(Hall_Table_Display);

        jLabel1.setText("Hall Name");

        jLabel2.setText("Hall Type");

        jLabel3.setText("Total Seat");

        Add_Row_Btn.setText("Add");
        Add_Row_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Row_BtnActionPerformed(evt);
            }
        });

        Remove_Row_Btn.setText("Remove");
        Remove_Row_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Remove_Row_BtnActionPerformed(evt);
            }
        });

        Hall_Update_Btn.setText("Update");
        Hall_Update_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hall_Update_BtnActionPerformed(evt);
            }
        });

        HallName_Update_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HallName_Update_1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Hall Name");

        jLabel5.setText("Hall Type");

        jLabel6.setText("Total Seat");

        jLabel7.setText("Condition :");

        jLabel8.setText("Update Value :");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(786, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 93, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 727, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(134, 134, 134)
                            .addComponent(jLabel1)
                            .addGap(117, 117, 117)
                            .addComponent(jLabel2)
                            .addGap(149, 149, 149)
                            .addComponent(jLabel3))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(108, 108, 108)
                            .addComponent(HallName_Add_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(HallType_Add_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(TotalSeat_Add_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(277, 277, 277)
                            .addComponent(Add_Row_Btn, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(54, 54, 54)
                            .addComponent(Remove_Row_Btn))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(164, 164, 164)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(91, 91, 91)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(97, 97, 97)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(2, 2, 2)
                            .addComponent(jLabel7)
                            .addGap(54, 54, 54)
                            .addComponent(HallName_Update_1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(HallType_Update_1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(TotalSeat_Update_1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGap(37, 37, 37)
                            .addComponent(HallName_Update_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(HallType_Update_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(TotalSeat_Update_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(351, 351, 351)
                            .addComponent(Hall_Update_Btn)))
                    .addGap(0, 93, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(648, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 78, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(45, 45, 45)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3))
                    .addGap(11, 11, 11)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(HallName_Add_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(HallType_Add_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TotalSeat_Add_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(35, 35, 35)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Add_Row_Btn)
                        .addComponent(Remove_Row_Btn))
                    .addGap(99, 99, 99)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5)
                        .addComponent(jLabel6))
                    .addGap(11, 11, 11)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel7))
                        .addComponent(HallName_Update_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(HallType_Update_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TotalSeat_Update_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(43, 43, 43)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addComponent(jLabel8))
                        .addComponent(HallName_Update_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(HallType_Update_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TotalSeat_Update_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(26, 26, 26)
                    .addComponent(Hall_Update_Btn)
                    .addGap(0, 78, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Add_Row_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Row_BtnActionPerformed
        // TODO add your handling code here:

        String Hall_Name = HallName_Add_txt.getText();
        String Hall_Type = HallType_Add_txt.getText();
        String Total_Seat = TotalSeat_Add_txt.getText();

        if (Hall_Name.equals("")) {
            JOptionPane.showMessageDialog(null, "Enter a Hall Name");
        } else if (Hall_Type.equals("")) {
            JOptionPane.showMessageDialog(null, "Enter a Hall Type");
        } else if (Total_Seat.equals("")) {
            JOptionPane.showMessageDialog(null, "Enter Total Seat");
        } else {
            try {
                Connection connection;
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                connection = DriverManager.getConnection(
                    "jdbc:sqlserver://localhost:1433;databaseName=Register_Login;selectMethod=cursor", "root", "root");

                String command = "insert into Hall (HallName,HallType,TotalSeat) values (?,?,?)";
                PreparedStatement ps = connection.prepareStatement(command);
                ps.setString(1, Hall_Name);
                ps.setString(2, Hall_Type);
                ps.setString(3, Total_Seat);

                ps.executeUpdate();

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        String query = "SELECT * from Hall ";

        int itr = 0;

        String[][] info = new String[1000][10];

        try {
            Connection con;
            PreparedStatement ps;
            ResultSet rs;
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
            ps = con.prepareStatement(query);

            rs = ps.executeQuery();

            while (rs.next()) {

                String[] data = new String[3];

                info[itr][0] = rs.getString("HallName");
                info[itr][1] = rs.getString("HallType");
                info[itr][2] = rs.getString("TotalSeat");

                itr++;
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(itr);

        setVisible(false);
        new Hall_Edit_Table(info, itr).setVisible(true);

    }//GEN-LAST:event_Add_Row_BtnActionPerformed

    private void Remove_Row_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Remove_Row_BtnActionPerformed
        // TODO add your handling code here:

        int itr = 0;

        String[][] info = new String[1000][10];

        String Hall_Name = HallName_Add_txt.getText();
        String Hall_Type = HallType_Add_txt.getText();
        String Total_Seat = TotalSeat_Add_txt.getText();

        if (Hall_Type.equals("") && Total_Seat.equals("")) {

            String query = "DELETE FROM HAll WHERE HallName=?";

            try {
                Connection con;
                PreparedStatement ps;
                ResultSet rs;
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

                con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
                ps = con.prepareStatement(query);

                ps.setString(1, Hall_Name);

                rs = ps.executeQuery();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        if (Hall_Name.equals("") && Total_Seat.equals("")) {

            String query = "DELETE FROM HAll WHERE HallType=?";

            try {
                Connection con;
                PreparedStatement ps;
                ResultSet rs;
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

                con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
                ps = con.prepareStatement(query);

                ps.setString(1, Hall_Type);

                rs = ps.executeQuery();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        if (Hall_Name.equals("") && Hall_Type.equals("")) {

            String query = "DELETE FROM HAll WHERE TotalSeat=?";

            try {
                Connection con;
                PreparedStatement ps;
                ResultSet rs;
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

                con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
                ps = con.prepareStatement(query);

                ps.setString(1, Total_Seat);

                rs = ps.executeQuery();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        if (!HallName_Add_txt.getText().isEmpty() && !HallType_Add_txt.getText().isEmpty()) {

            String query = "DELETE FROM HAll WHERE HallName=? and HallType=?";

            try {
                Connection con;
                PreparedStatement ps;
                ResultSet rs;
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

                con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
                ps = con.prepareStatement(query);

                ps.setString(1, Hall_Name);
                ps.setString(2, Hall_Type);

                rs = ps.executeQuery();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        String query = "SELECT * from Hall ";

        try {
            Connection con;
            PreparedStatement ps;
            ResultSet rs;
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
            ps = con.prepareStatement(query);

            rs = ps.executeQuery();

            while (rs.next()) {

                String[] data = new String[3];

                info[itr][0] = rs.getString("HallName");
                info[itr][1] = rs.getString("HallType");
                info[itr][2] = rs.getString("TotalSeat");

                itr++;
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(itr);

        setVisible(false);
        new Hall_Edit_Table(info, itr).setVisible(true);

    }//GEN-LAST:event_Remove_Row_BtnActionPerformed

    private void Hall_Update_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hall_Update_BtnActionPerformed
        // TODO add your handling code here:

        boolean flag = false;

        String query = "Update Hall Set ";

        if (!HallName_Update_txt.getText().isEmpty()) {

            String qq = "'" + HallName_Update_txt.getText().toString() + "'";

            query = query + "HallName = " + qq;

            flag = true;

        }

        if (!HallType_Update_txt.getText().isEmpty()) {

            String qq = "'" + HallType_Update_txt.getText().toString() + "'";

            if (flag == true) {
                query = query + ",";

            }
            query = query + "HallType = " + qq;

            flag = true;

        }

        if (!TotalSeat_Update_txt.getText().isEmpty()) {

            System.out.println(TotalSeat_Update_txt.equals(""));
            String qq = TotalSeat_Update_txt.getText().toString();

            if (flag == true) {
                query = query + ",";

            }
            query = query + "TotalSeat = " + qq;

            flag = true;

        }

        query = query + " where ";
        flag = false;

        if (!HallName_Update_1.getText().isEmpty()) {

            String qq = "'" + HallName_Update_1.getText().toString() + "'";

            if (flag == true) {
                query = query + ",";

            }
            query = query + "HallName = " + qq;

            flag = true;

        }

        if (!HallType_Update_1.getText().isEmpty()) {

            String qq = HallType_Update_1.getText().toString();

            if (flag == true) {
                query = query + ",";

            }
            query = query + "HallType = " + qq;

            flag = true;

        }

        if (!TotalSeat_Update_1.getText().isEmpty()) {

            String qq = TotalSeat_Update_1.getText().toString();

            if (flag == true) {
                query = query + ",";

            }
            query = query + "TotalSeat = " + qq;

            flag = true;

        }

        try {
            Connection con;
            PreparedStatement ps;
            ResultSet rs;
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
            ps = con.prepareStatement(query);

            System.out.println(query);
            rs = ps.executeQuery();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }

        query = "SELECT * from Hall ";

        int itr = 0;

        String[][] info = new String[1000][10];

        try {
            Connection con;
            PreparedStatement ps;
            ResultSet rs;
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=Register_Login;user=root;password=root");
            ps = con.prepareStatement(query);

            rs = ps.executeQuery();

            while (rs.next()) {

                String[] data = new String[3];

                info[itr][0] = rs.getString("HallName");
                info[itr][1] = rs.getString("HallType");
                info[itr][2] = rs.getString("TotalSeat");

                itr++;
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(itr);

        setVisible(false);
        new Hall_Edit_Table(info, itr).setVisible(true);

    }//GEN-LAST:event_Hall_Update_BtnActionPerformed

    private void HallName_Update_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HallName_Update_1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HallName_Update_1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
            new Edit_Tables().setVisible(true);
            setVisible(false);
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hall_Edit_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hall_Edit_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hall_Edit_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hall_Edit_Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hall_Edit_Table().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_Row_Btn;
    private javax.swing.JTextField HallName_Add_txt;
    private javax.swing.JTextField HallName_Update_1;
    private javax.swing.JTextField HallName_Update_txt;
    private javax.swing.JTextField HallType_Add_txt;
    private javax.swing.JTextField HallType_Update_1;
    private javax.swing.JTextField HallType_Update_txt;
    private javax.swing.JTable Hall_Table_Display;
    private javax.swing.JButton Hall_Update_Btn;
    private javax.swing.JButton Remove_Row_Btn;
    private javax.swing.JTextField TotalSeat_Add_txt;
    private javax.swing.JTextField TotalSeat_Update_1;
    private javax.swing.JTextField TotalSeat_Update_txt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
